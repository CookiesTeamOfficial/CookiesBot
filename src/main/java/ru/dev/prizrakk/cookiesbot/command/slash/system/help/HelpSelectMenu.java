package ru.dev.prizrakk.cookiesbot.command.slash.system.help;

import net.dv8tion.jda.api.EmbedBuilder;
import net.dv8tion.jda.api.entities.emoji.Emoji;
import net.dv8tion.jda.api.events.interaction.component.StringSelectInteractionEvent;
import net.dv8tion.jda.api.hooks.ListenerAdapter;
import net.dv8tion.jda.api.interactions.commands.build.OptionData;
import net.dv8tion.jda.api.interactions.components.selections.SelectOption;
import net.dv8tion.jda.api.interactions.components.selections.StringSelectMenu;

import ru.dev.prizrakk.cookiesbot.command.CommandCategory;
import ru.dev.prizrakk.cookiesbot.command.CommandManager;
import ru.dev.prizrakk.cookiesbot.command.ICommand;

import java.awt.*;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class HelpSelectMenu extends ListenerAdapter {
    public List<ICommand> commands = CommandManager.commands; // –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥

    @Override
    public void onStringSelectInteraction(StringSelectInteractionEvent event) {
        SimpleDateFormat dateFormat = new SimpleDateFormat("HH:mm:ss ");
        String timestamp = dateFormat.format(new Date());
        if (event.getComponentId().equals("helpmenu")) {
            String selectedValue = event.getValues().get(0); // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è

            if (selectedValue.equals("info")) {
                EmbedBuilder embed = new EmbedBuilder();
                embed.setTitle("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ CookiesBot");
                embed.setColor(new Color(255, 104, 0));
                embed.setDescription("CookiesBot –±—ã–ª —Å–æ–∑–¥–∞–Ω –≤ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –≤–∞–º –ø–æ–º–æ—á—å –≤—Å–µ–º —á–µ–º –º–æ–∂–µ—Ç –∏ —á–∞—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∏–º–µ—è –æ—Ç–∫—Ä—ã—Ç—ã–π –∫–æ–¥");
                embed.addField("–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫", "<@579683756789727243>", true);
                embed.addField("–Ø–∑—ã–∫ –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è", "`java 8`", true);
                embed.addField("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ Discord", "`JDA 5.0.0-beta.20`", true);
                embed.addField("–í–µ—Ä—Å–∏—è –±–æ—Ç–∞", "`pre-release 0.4-rework`", true);
                embed.setFooter("–ö–æ–º–∞–Ω–¥–∞ –≤—ã–∑–≤–∞–Ω–∞: " + timestamp);
                event.replyEmbeds(embed.build()).setEphemeral(true).queue();
            } else if (selectedValue.equals("command")) {
                EmbedBuilder embed = new EmbedBuilder();
                embed.setColor(new Color(255, 104, 0));
                embed.setTitle("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤–∞–º –Ω—É–∂–Ω–∞");
                embed.setFooter("–ö–æ–º–∞–Ω–¥–∞ –≤—ã–∑–≤–∞–Ω–∞: " + timestamp);
                event.replyEmbeds(embed.build()).setActionRow(
                        StringSelectMenu.create("helpcommand")
                                .addOptions(
                                        SelectOption.of("–°–µ—Ä–≤–µ—Ä–Ω—ã–µ", "server")
                                                .withDescription("–ü–æ–∫–∞–∂–µ—Ç –≤—Å–µ —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã")
                                                .withEmoji(Emoji.fromUnicode("üè†")),
                                        SelectOption.of("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è", "admin")
                                                .withDescription("–ü–æ–∫–∞–∂–µ—Ç –∫–æ–º–∞–Ω–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏")
                                                .withEmoji(Emoji.fromUnicode("üîß")),
                                        SelectOption.of("–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ", "fun")
                                                .withDescription("–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã")
                                                .withEmoji(Emoji.fromUnicode("üéâ")),
                                        SelectOption.of("–ú—É–∑—ã–∫–∞", "music")
                                                .withDescription("–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã")
                                                .withEmoji(Emoji.fromUnicode("üéµ")),
                                        SelectOption.of("–ü—Ä–µ—Ñ–∏–∫—Å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã", "prefix")
                                                .withDescription("–ö–æ–º–∞–Ω–¥—ã —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º")
                                                .withEmoji(Emoji.fromUnicode("üî§")),
                                        SelectOption.of("–ö–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "user")
                                                .withDescription("–ö–æ–º–∞–Ω–¥—ã —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º")
                                                .withEmoji(Emoji.fromUnicode("üî§")),
                                        SelectOption.of("–ü—Ä–æ—á–µ–µ", "other")
                                                .withDescription("–û—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã")
                                                .withEmoji(Emoji.fromUnicode("‚ùì"))
                                ).build()
                ).setEphemeral(true).queue();
            }
        }
        if (event.getComponentId().equals("helpcommand")) {
            String selectedValue = event.getValues().get(0); // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è

            EmbedBuilder embed = new EmbedBuilder();
            embed.setColor(new Color(255, 104, 0));
            embed.setTitle("–ö–æ–º–∞–Ω–¥—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: " + selectedValue.toUpperCase());

            CommandCategory category;
            switch (selectedValue) {
                case "server":
                    category = CommandCategory.SERVER;
                    break;
                case "admin":
                    category = CommandCategory.ADMINISTRATION;
                    break;
                case "fun":
                    category = CommandCategory.FUN;
                    break;
                case "music":
                    category = CommandCategory.MUSIC;
                    break;
                case "prefix":
                    category = CommandCategory.PREFIX;
                    break;
                case "other":
                    category = CommandCategory.OTHER;
                    break;
                default:
                    embed.setDescription("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è...");
                    category = null;
                    break;
            }

            if (category != null) {
                for (ICommand command : commands) {
                    if (command.getCategory() == category) {

                        StringBuilder optionsDescription = new StringBuilder();
                        List<OptionData> options = command.getOptions();
                        if (options != null) {
                            for (OptionData option : options) {
                                optionsDescription.append(option.getName())
                                        .append(": ")
                                        .append(option.getDescription())
                                        .append("\n");
                            }
                        }
                        embed.addField("–ù–∞–∑–≤–∞–Ω–∏–µ","> " + command.getName(), false);
                        embed.addField("–û–ø–∏—Å–∞–Ω–∏–µ","> " + command.getDescription(), true);
                        embed.addField("–û–ø—Ü–∏–∏", "> " + (optionsDescription.length() > 0 ? optionsDescription.toString() : "–ù–µ—Ç –æ–ø—Ü–∏–π"), true);
                    }
                }
            }
            embed.setFooter("–ö–æ–º–∞–Ω–¥–∞ –≤—ã–∑–≤–∞–Ω–∞: " + timestamp);
            event.replyEmbeds(embed.build()).setEphemeral(true).queue();
        }
    }
}
